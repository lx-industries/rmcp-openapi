---
source: crates/rmcp-openapi/tests/test_with_js.rs
expression: responses
---
[
  {
    "type": "tools_list",
    "data": {
      "tools": [
        {
          "name": "addPet",
          "title": "Add a new pet to the store",
          "description": "Add a new pet to the store\n\nAdd a new pet to the store\n\nEndpoint: POST /pet",
          "inputSchema": {
            "type": "object",
            "properties": {
              "request_body": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string",
                    "example": "doggie"
                  },
                  "photoUrls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "available",
                      "pending",
                      "sold"
                    ]
                  }
                },
                "required": [
                  "name",
                  "photoUrls"
                ],
                "additionalProperties": true,
                "description": "Pet object that needs to be added to the store"
              }
            },
            "required": [
              "request_body"
            ],
            "additionalProperties": false
          },
          "outputSchema": {
            "type": "object",
            "properties": {
              "status": {
                "type": "integer",
                "description": "HTTP status code",
                "minimum": 100,
                "maximum": 599
              },
              "body": {
                "description": "Response body - either success data or error information",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "name": {
                        "type": "string",
                        "example": "doggie"
                      },
                      "photoUrls": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "available",
                          "pending",
                          "sold"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "photoUrls"
                    ],
                    "additionalProperties": true
                  },
                  {
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "description": "Execution errors that occur during tool execution\nThese return as Ok(CallToolResult { is_error: true })",
                        "oneOf": [
                          {
                            "description": "HTTP error response from the API",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "HTTP status code",
                                "type": "integer",
                                "format": "uint16",
                                "minimum": 0,
                                "maximum": 65535
                              },
                              "message": {
                                "description": "Error message or response body",
                                "type": "string"
                              },
                              "details": {
                                "description": "Optional structured error details from API"
                              },
                              "type": {
                                "type": "string",
                                "const": "http-error"
                              }
                            },
                            "required": [
                              "type",
                              "status",
                              "message"
                            ]
                          },
                          {
                            "description": "Network/connection failures",
                            "type": "object",
                            "properties": {
                              "message": {
                                "description": "Description of the network failure",
                                "type": "string"
                              },
                              "category": {
                                "description": "Network error categories for better error handling",
                                "oneOf": [
                                  {
                                    "description": "Request timeout",
                                    "type": "string",
                                    "const": "timeout"
                                  },
                                  {
                                    "description": "Connection error (DNS, refused, unreachable)",
                                    "type": "string",
                                    "const": "connect"
                                  },
                                  {
                                    "description": "Request construction/sending error",
                                    "type": "string",
                                    "const": "request"
                                  },
                                  {
                                    "description": "Response body error",
                                    "type": "string",
                                    "const": "body"
                                  },
                                  {
                                    "description": "Response decoding error",
                                    "type": "string",
                                    "const": "decode"
                                  },
                                  {
                                    "description": "Other network errors",
                                    "type": "string",
                                    "const": "other"
                                  }
                                ]
                              },
                              "type": {
                                "type": "string",
                                "const": "network-error"
                              }
                            },
                            "required": [
                              "type",
                              "message",
                              "category"
                            ]
                          },
                          {
                            "description": "Response parsing failed",
                            "type": "object",
                            "properties": {
                              "reason": {
                                "description": "Description of the parsing failure",
                                "type": "string"
                              },
                              "raw_response": {
                                "description": "Raw response body for debugging",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "const": "response-parsing-error"
                              }
                            },
                            "required": [
                              "type",
                              "reason"
                            ]
                          }
                        ]
                      }
                    },
                    "description": "Error response structure for tool execution failures",
                    "type": "object"
                  }
                ]
              }
            },
            "required": [
              "status",
              "body"
            ],
            "description": "Unified response structure with success and error variants",
            "additionalProperties": false
          }
        },
        {
          "name": "findPetsByStatus",
          "title": "Finds Pets by status",
          "description": "Finds Pets by status\n\nMultiple status values can be provided with comma separated strings\n\nEndpoint: GET /pet/findByStatus",
          "inputSchema": {
            "type": "object",
            "properties": {
              "status": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "available",
                    "pending",
                    "sold"
                  ]
                },
                "description": "Status values that need to be considered for filter"
              },
              "timeout_seconds": {
                "type": "integer",
                "description": "Request timeout in seconds",
                "minimum": 1,
                "maximum": 300,
                "default": 30
              }
            },
            "required": [
              "status"
            ],
            "additionalProperties": false
          },
          "outputSchema": {
            "type": "object",
            "properties": {
              "status": {
                "type": "integer",
                "description": "HTTP status code",
                "minimum": 100,
                "maximum": 599
              },
              "body": {
                "description": "Response body - either success data or error information",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "name": {
                          "type": "string",
                          "example": "doggie"
                        },
                        "photoUrls": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "available",
                            "pending",
                            "sold"
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "photoUrls"
                      ],
                      "additionalProperties": true
                    }
                  },
                  {
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "description": "Execution errors that occur during tool execution\nThese return as Ok(CallToolResult { is_error: true })",
                        "oneOf": [
                          {
                            "description": "HTTP error response from the API",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "HTTP status code",
                                "type": "integer",
                                "format": "uint16",
                                "minimum": 0,
                                "maximum": 65535
                              },
                              "message": {
                                "description": "Error message or response body",
                                "type": "string"
                              },
                              "details": {
                                "description": "Optional structured error details from API"
                              },
                              "type": {
                                "type": "string",
                                "const": "http-error"
                              }
                            },
                            "required": [
                              "type",
                              "status",
                              "message"
                            ]
                          },
                          {
                            "description": "Network/connection failures",
                            "type": "object",
                            "properties": {
                              "message": {
                                "description": "Description of the network failure",
                                "type": "string"
                              },
                              "category": {
                                "description": "Network error categories for better error handling",
                                "oneOf": [
                                  {
                                    "description": "Request timeout",
                                    "type": "string",
                                    "const": "timeout"
                                  },
                                  {
                                    "description": "Connection error (DNS, refused, unreachable)",
                                    "type": "string",
                                    "const": "connect"
                                  },
                                  {
                                    "description": "Request construction/sending error",
                                    "type": "string",
                                    "const": "request"
                                  },
                                  {
                                    "description": "Response body error",
                                    "type": "string",
                                    "const": "body"
                                  },
                                  {
                                    "description": "Response decoding error",
                                    "type": "string",
                                    "const": "decode"
                                  },
                                  {
                                    "description": "Other network errors",
                                    "type": "string",
                                    "const": "other"
                                  }
                                ]
                              },
                              "type": {
                                "type": "string",
                                "const": "network-error"
                              }
                            },
                            "required": [
                              "type",
                              "message",
                              "category"
                            ]
                          },
                          {
                            "description": "Response parsing failed",
                            "type": "object",
                            "properties": {
                              "reason": {
                                "description": "Description of the parsing failure",
                                "type": "string"
                              },
                              "raw_response": {
                                "description": "Raw response body for debugging",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "const": "response-parsing-error"
                              }
                            },
                            "required": [
                              "type",
                              "reason"
                            ]
                          }
                        ]
                      }
                    },
                    "description": "Error response structure for tool execution failures",
                    "type": "object"
                  }
                ]
              }
            },
            "required": [
              "status",
              "body"
            ],
            "description": "Unified response structure with success and error variants",
            "additionalProperties": false
          }
        },
        {
          "name": "getPetById",
          "title": "Find pet by ID",
          "description": "Find pet by ID\n\nReturns a single pet\n\nEndpoint: GET /pet/{petId}",
          "inputSchema": {
            "type": "object",
            "properties": {
              "petId": {
                "type": "integer",
                "format": "int64",
                "minimum": 1,
                "description": "ID of pet to return"
              }
            },
            "required": [
              "petId"
            ],
            "additionalProperties": false
          },
          "outputSchema": {
            "type": "object",
            "properties": {
              "status": {
                "type": "integer",
                "description": "HTTP status code",
                "minimum": 100,
                "maximum": 599
              },
              "body": {
                "description": "Response body - either success data or error information",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "name": {
                        "type": "string",
                        "example": "doggie"
                      },
                      "photoUrls": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "available",
                          "pending",
                          "sold"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "photoUrls"
                    ],
                    "additionalProperties": true
                  },
                  {
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "description": "Execution errors that occur during tool execution\nThese return as Ok(CallToolResult { is_error: true })",
                        "oneOf": [
                          {
                            "description": "HTTP error response from the API",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "HTTP status code",
                                "type": "integer",
                                "format": "uint16",
                                "minimum": 0,
                                "maximum": 65535
                              },
                              "message": {
                                "description": "Error message or response body",
                                "type": "string"
                              },
                              "details": {
                                "description": "Optional structured error details from API"
                              },
                              "type": {
                                "type": "string",
                                "const": "http-error"
                              }
                            },
                            "required": [
                              "type",
                              "status",
                              "message"
                            ]
                          },
                          {
                            "description": "Network/connection failures",
                            "type": "object",
                            "properties": {
                              "message": {
                                "description": "Description of the network failure",
                                "type": "string"
                              },
                              "category": {
                                "description": "Network error categories for better error handling",
                                "oneOf": [
                                  {
                                    "description": "Request timeout",
                                    "type": "string",
                                    "const": "timeout"
                                  },
                                  {
                                    "description": "Connection error (DNS, refused, unreachable)",
                                    "type": "string",
                                    "const": "connect"
                                  },
                                  {
                                    "description": "Request construction/sending error",
                                    "type": "string",
                                    "const": "request"
                                  },
                                  {
                                    "description": "Response body error",
                                    "type": "string",
                                    "const": "body"
                                  },
                                  {
                                    "description": "Response decoding error",
                                    "type": "string",
                                    "const": "decode"
                                  },
                                  {
                                    "description": "Other network errors",
                                    "type": "string",
                                    "const": "other"
                                  }
                                ]
                              },
                              "type": {
                                "type": "string",
                                "const": "network-error"
                              }
                            },
                            "required": [
                              "type",
                              "message",
                              "category"
                            ]
                          },
                          {
                            "description": "Response parsing failed",
                            "type": "object",
                            "properties": {
                              "reason": {
                                "description": "Description of the parsing failure",
                                "type": "string"
                              },
                              "raw_response": {
                                "description": "Raw response body for debugging",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "const": "response-parsing-error"
                              }
                            },
                            "required": [
                              "type",
                              "reason"
                            ]
                          }
                        ]
                      }
                    },
                    "description": "Error response structure for tool execution failures",
                    "type": "object"
                  }
                ]
              }
            },
            "required": [
              "status",
              "body"
            ],
            "description": "Unified response structure with success and error variants",
            "additionalProperties": false
          }
        }
      ]
    }
  },
  {
    "type": "resources_list",
    "data": {
      "resources": []
    }
  },
  {
    "type": "resource_templates_list",
    "data": {
      "resourceTemplates": []
    }
  },
  {
    "type": "prompts_list",
    "data": {
      "prompts": []
    }
  },
  {
    "type": "tool_call_result",
    "tool": "getPetById",
    "arguments": {
      "petId": 123
    },
    "success": true,
    "data": {
      "content": [
        {
          "type": "text",
          "text": "{\"status\":200,\"body\":{\"id\":123,\"name\":\"doggie\",\"category\":{\"id\":1,\"name\":\"Dogs\"},\"photoUrls\":[\"https://example.com/photo1.jpg\"],\"tags\":[{\"id\":1,\"name\":\"tag1\"}],\"status\":\"available\"}}"
        }
      ],
      "structuredContent": {
        "status": 200,
        "body": {
          "id": 123,
          "name": "doggie",
          "category": {
            "id": 1,
            "name": "Dogs"
          },
          "photoUrls": [
            "https://example.com/photo1.jpg"
          ],
          "tags": [
            {
              "id": 1,
              "name": "tag1"
            }
          ],
          "status": "available"
        }
      },
      "isError": false
    }
  },
  {
    "type": "tool_call_result",
    "tool": "findPetsByStatus",
    "arguments": {
      "status": [
        "available",
        "pending"
      ]
    },
    "success": true,
    "data": {
      "content": [
        {
          "type": "text",
          "text": "{\"status\":200,\"body\":[{\"id\":1,\"name\":\"doggie\",\"category\":{\"id\":1,\"name\":\"Dogs\"},\"photoUrls\":[\"https://example.com/photo1.jpg\"],\"tags\":[{\"id\":1,\"name\":\"tag1\"}],\"status\":\"available\"},{\"id\":2,\"name\":\"kitty\",\"category\":{\"id\":2,\"name\":\"Cats\"},\"photoUrls\":[\"https://example.com/photo2.jpg\"],\"tags\":[{\"id\":2,\"name\":\"tag2\"}],\"status\":\"pending\"}]}"
        }
      ],
      "structuredContent": {
        "status": 200,
        "body": [
          {
            "id": 1,
            "name": "doggie",
            "category": {
              "id": 1,
              "name": "Dogs"
            },
            "photoUrls": [
              "https://example.com/photo1.jpg"
            ],
            "tags": [
              {
                "id": 1,
                "name": "tag1"
              }
            ],
            "status": "available"
          },
          {
            "id": 2,
            "name": "kitty",
            "category": {
              "id": 2,
              "name": "Cats"
            },
            "photoUrls": [
              "https://example.com/photo2.jpg"
            ],
            "tags": [
              {
                "id": 2,
                "name": "tag2"
              }
            ],
            "status": "pending"
          }
        ]
      },
      "isError": false
    }
  },
  {
    "type": "tool_call_result",
    "tool": "addPet",
    "arguments": {
      "request_body": {
        "name": "MCP Test Dog",
        "status": "available"
      }
    },
    "success": true,
    "data": {
      "content": [
        {
          "type": "text",
          "text": "{\"status\":201,\"body\":{\"id\":123,\"name\":\"new doggie\",\"category\":{\"id\":1,\"name\":\"Dogs\"},\"photoUrls\":[\"https://example.com/photo1.jpg\"],\"tags\":[{\"id\":1,\"name\":\"tag1\"}],\"status\":\"available\"}}"
        }
      ],
      "structuredContent": {
        "status": 201,
        "body": {
          "id": 123,
          "name": "new doggie",
          "category": {
            "id": 1,
            "name": "Dogs"
          },
          "photoUrls": [
            "https://example.com/photo1.jpg"
          ],
          "tags": [
            {
              "id": 1,
              "name": "tag1"
            }
          ],
          "status": "available"
        }
      },
      "isError": false
    }
  },
  {
    "type": "tool_call_result",
    "tool": "getPetById",
    "arguments": {
      "petId": 999999
    },
    "success": true,
    "data": {
      "content": [
        {
          "type": "text",
          "text": "{\"status\":404,\"body\":{\"message\":\"Pet not found\"}}"
        }
      ],
      "structuredContent": {
        "status": 404,
        "body": {
          "message": "Pet not found"
        }
      },
      "isError": true
    }
  },
  {
    "type": "tool_call_result",
    "tool": "addPet",
    "arguments": {
      "request_body": {
        "status": "invalid_status_value"
      }
    },
    "success": false,
    "error": {
      "message": "MCP error -32602: Validation failed - parameter 'request_body': \"invalid_status_value\" is not one of \"available\", \"pending\" or \"sold\"",
      "code": -32602
    }
  },
  {
    "type": "tool_call_result",
    "tool": "getPetById",
    "arguments": {
      "pet_id": 123
    },
    "success": false,
    "error": {
      "message": "MCP error -32602: Validation failed - invalid parameters: 'pet_id' (suggestions: petId); missing parameters: 'petId' is required (expected: integer)",
      "code": -32602
    }
  },
  {
    "type": "tool_call_result",
    "tool": "findPetsByStatus",
    "arguments": {
      "statuses": [
        "available"
      ],
      "limit": 10
    },
    "success": false,
    "error": {
      "message": "MCP error -32602: Validation failed - invalid parameters: 'statuses' (suggestions: status), 'limit'; missing parameters: 'status' is required (expected: array)",
      "code": -32602
    }
  },
  {
    "type": "tool_call_result",
    "tool": "getPetById",
    "arguments": {
      "petId": "not-a-number"
    },
    "success": false,
    "error": {
      "message": "MCP error -32602: Validation failed - parameter 'petId': \"not-a-number\" is not of type \"integer\"",
      "code": -32602
    }
  },
  {
    "type": "tool_call_result",
    "tool": "findPetsByStatus",
    "arguments": {
      "status": "available"
    },
    "success": false,
    "error": {
      "message": "MCP error -32602: Validation failed - parameter 'status': \"available\" is not of type \"array\"",
      "code": -32602
    }
  },
  {
    "type": "tool_call_result",
    "tool": "findPetsByStatus",
    "arguments": {
      "status": [
        "invalid_status"
      ]
    },
    "success": false,
    "error": {
      "message": "MCP error -32602: Validation failed - parameter 'status': \"invalid_status\" is not one of \"available\", \"pending\" or \"sold\"",
      "code": -32602
    }
  },
  {
    "type": "tool_call_result",
    "tool": "addPet",
    "arguments": {
      "request_body": {
        "name": "Test Pet",
        "category": {
          "id": "not-a-number"
        },
        "status": "available"
      }
    },
    "success": true,
    "data": {
      "content": [
        {
          "type": "text",
          "text": "{\"status\":400,\"body\":{\"message\":\"Invalid input\",\"details\":\"Name is required\"}}"
        }
      ],
      "structuredContent": {
        "status": 400,
        "body": {
          "message": "Invalid input",
          "details": "Name is required"
        }
      },
      "isError": true
    }
  },
  {
    "type": "tool_call_result",
    "tool": "getPetByID",
    "arguments": {
      "petId": 123
    },
    "success": false,
    "error": {
      "message": "MCP error -32601: Tool 'getPetByID' not found",
      "code": -32601,
      "data": {
        "suggestions": [
          "getPetById"
        ]
      }
    }
  }
]
